Project 1 : Create a Worker class includes

• Attributes
⚫ name (string)
⚫ socialSecurityNumber (int)
wage (float)
⚫ workingHours (int)
• Behaviours
⚫ displayInfo()
Print name + socialSecurityNumber:
⚫displaySalary()
• Print salary (salary wage workingHours)
• Create a worker object and initialize attributes.
⚫ Call displayInfo() and displaySalary() methods for worker object.
• Create another worker, and this time get attributes from the keyboard

Project 2 part one: •You need to read an integer value from keyboard. However, let's say a user typed a string value.
This will cause an input mismatch exception.
•Handle this exception.
(Hint: use InputMismatchException exception.)

part two: Creating your own Exception
Create a Worker class which contains name salary attributes
Create setName and setSalary methods.
•Your program should throw an exception when salary value is less than
zero. (When you enter an illegal argument) The exception message is "salary amount must be greater than zero
⚫in main method handle the exception and display the exception message.
Add another attribute (counter) which must be shared by all the instances of Worker class
Create three workers and display number of total workers using counte Variable

Project 3 part one: Task: Create an Account class using following class diagram
Account
-balance: double
-ownerName: String
<<constructor>>Account( name: String, balance: double)
+add(amount: double)
+withdraw(amount: double)
+getBalance():double
+setOwner Name(name: String)
+getOwnerName():String

part two : You need to do the following modification in Account Class:
• In order to withdraw money, there will be a set of conditions:
• Set a password (for example 1234)
• User will get a message: "Please enter the 4-digit pass:"
• User must enter the pass using keyboard
•If pass is true, the user will withdraw the money
• If pass is wrong, the user will try again two more times.
•If the pass is still wrong, the user will get another message:
• "Your account has been blocked, please try again later"
• Do them all in withdraw() Method
